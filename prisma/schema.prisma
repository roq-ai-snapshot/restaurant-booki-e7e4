generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model employee {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_title     String      @db.VarChar(255)
  working_hours String      @db.VarChar(255)
  salary        Int
  user_id       String?     @db.Uuid
  restaurant_id String?     @db.Uuid
  start_date    DateTime    @db.Date
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  restaurant    restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String      @db.VarChar(255)
  description      String?     @db.VarChar(255)
  price            Int
  ingredients      String      @db.VarChar(255)
  preparation_time Int
  restaurant_id    String?     @db.Uuid
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  restaurant       restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservation {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date             DateTime    @db.Date
  time             DateTime    @db.Time(6)
  number_of_people Int
  user_id          String?     @db.Uuid
  restaurant_id    String?     @db.Uuid
  table_number     Int
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  restaurant       restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?       @db.VarChar(255)
  address       String?       @db.VarChar(255)
  opening_hours String?       @db.VarChar(255)
  capacity      Int?
  name          String        @db.VarChar(255)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  user_id       String        @db.Uuid
  tenant_id     String        @db.VarChar(255)
  employee      employee[]
  menu          menu[]
  reservation   reservation[]
  user          user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  employee    employee[]
  reservation reservation[]
  restaurant  restaurant[]
}
